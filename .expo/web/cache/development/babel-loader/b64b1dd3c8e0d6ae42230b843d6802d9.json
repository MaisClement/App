{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { useRef } from 'react';\nimport 'react-native-gesture-handler';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useRoute, useNavigation, NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { navigationRef } from \"./RootNavigation\";\nimport Trafic from \"./trafic\";\nimport Home from \"./home\";\nimport Gare from \"./gare\";\nimport Gare_1 from \"./gare_1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      screen: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var navigationRef = useRef();\n      var routeNameRef = useRef();\n      return _jsx(NavigationContainer, {\n        ref: navigationRef,\n        onReady: function onReady() {\n          return routeNameRef.current = navigationRef.current.getCurrentRoute().name;\n        },\n        onStateChange: function _callee() {\n          var previousRouteName, currentRouteName;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  previousRouteName = routeNameRef.current;\n                  currentRouteName = navigationRef.current.getCurrentRoute().name;\n\n                  if (!(previousRouteName !== currentRouteName)) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 5;\n                  return _regeneratorRuntime.awrap(Analytics.setCurrentScreen(currentRouteName));\n\n                case 5:\n                  routeNameRef.current = currentRouteName;\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        style: styles.container,\n        children: _jsxs(SafeAreaView, {\n          style: styles.container,\n          children: [_jsx(StatusBar, {\n            animated: true,\n            backgroundColor: \"#303138\",\n            barStyle: \"light-content\"\n          }), _jsxs(Stack.Navigator, {\n            screenOptions: {\n              headerStyle: {\n                backgroundColor: '#484a50'\n              },\n              headerTintColor: '#fff'\n            },\n            children: [_jsx(Stack.Screen, {\n              name: \"Home\",\n              component: Home,\n              options: {\n                headerShown: false\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Gare\",\n              component: Gare,\n              options: {\n                headerShown: false\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Gare_1\",\n              component: Gare_1,\n              options: {\n                headerShown: false\n              }\n            }), _jsx(Stack.Screen, {\n              name: \"Trafic\",\n              component: Trafic,\n              options: {\n                headerShown: false\n              }\n            })]\n          }), _jsx(Footer, {})]\n        })\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nfunction Footer() {\n  var navigation = useNavigation();\n  var route = '';\n  return _jsxs(View, {\n    style: styles.footer,\n    children: [_jsx(Pressable, {\n      onPress: function onPress() {\n        navigation.navigate('Home');\n      },\n      children: route == 'Home' ? _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/home_filled.png\")\n      }) : _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/home.png\")\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        navigation.navigate('Gare');\n      },\n      children: route == 'Gare' ? _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/gare_filled.png\")\n      }) : _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/gare.png\")\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        navigation.navigate('Trafic');\n      },\n      children: route == 'Trafic' ? _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/cone_filled.png\")\n      }) : _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/cone.png\")\n      })\n    })]\n  });\n}\n\nexport default App;\nexport { Footer };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#191c2b'\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'left',\n    fontWeight: 'bold',\n    color: '#fff',\n    margin: 23\n  },\n  footer: {\n    backgroundColor: '#ffffff30',\n    borderRadius: 10,\n    margin: 15,\n    padding: 10,\n    paddingBottom: 15,\n    flexGrow: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around'\n  },\n  footer_img: {\n    height: 30,\n    width: 30\n  }\n});","map":{"version":3,"sources":["/home/code/app/App.js"],"names":["React","useRef","useRoute","useNavigation","NavigationContainer","createStackNavigator","navigationRef","Trafic","Home","Gare","Gare_1","Stack","App","props","state","screen","routeNameRef","current","getCurrentRoute","name","previousRouteName","currentRouteName","Analytics","setCurrentScreen","styles","container","headerStyle","backgroundColor","headerTintColor","headerShown","Component","Footer","navigation","route","footer","navigate","footer_img","require","StyleSheet","create","flex","title","fontSize","textAlign","fontWeight","color","margin","borderRadius","padding","paddingBottom","flexGrow","display","flexDirection","flexWrap","justifyContent","height","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRef } from 'react';\nimport 'react-native-gesture-handler';\nimport { RefreshControl, Pressable, StatusBar, SafeAreaView, ScrollView, StyleSheet, Text, View, Image  } from 'react-native';\nimport { useRoute, useNavigation, NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport {navigationRef} from './RootNavigation';\n\nimport Trafic from './trafic';\nimport Home from './home';\nimport Gare from './gare';\nimport Gare_1 from './gare_1';\n\nconst Stack = createStackNavigator();\n  \nclass App extends React.Component  {\n  constructor(props) {\n\t\tsuper(props);\n    this.state = {\n      screen: ''\n    }\n\t}\n\n\trender(){\n    const navigationRef = useRef();\n    const routeNameRef = useRef();\n\n\t\treturn (\n      <NavigationContainer ref={navigationRef}\n      onReady={() =>\n        (routeNameRef.current = navigationRef.current.getCurrentRoute().name)\n      }\n      onStateChange={async () => {\n        const previousRouteName = routeNameRef.current;\n        const currentRouteName = navigationRef.current.getCurrentRoute().name;\n\n        if (previousRouteName !== currentRouteName) {\n          // The line below uses the expo-firebase-analytics tracker\n          // https://docs.expo.io/versions/latest/sdk/firebase-analytics/\n          // Change this line to use another Mobile analytics SDK\n          await Analytics.setCurrentScreen(currentRouteName);\n        }\n\n        // Save the current route name for later comparison\n        routeNameRef.current = currentRouteName;\n      }} style={styles.container}>\n        <SafeAreaView  style={styles.container}>\n          <StatusBar\n            animated = {true}\n            backgroundColor = '#303138'\n            barStyle = 'light-content'\n          />      \n\n            <Stack.Navigator\n              screenOptions={{\n                headerStyle: {\n                  backgroundColor: '#484a50',\n                },\n                headerTintColor: '#fff',\n              }}\n            >\n              <Stack.Screen\n                name=\"Home\"\n                component={Home}\n                options={{\n                  headerShown: false,\n                }}\n              />\n              <Stack.Screen\n                name=\"Gare\"\n                component={Gare}\n                options={{\n                  headerShown: false,\n                }}\n              />\n              <Stack.Screen\n                name=\"Gare_1\"\n                component={Gare_1}\n                options={{\n                  headerShown: false,\n                }}\n              />\n              <Stack.Screen \n                name=\"Trafic\"\n                component={Trafic}\n                options={{\n                  headerShown: false\n                }}\n              />\n            </Stack.Navigator> \n          <Footer />\n        </SafeAreaView >\n      </NavigationContainer>\n    );\n  }\n}\n\nfunction Footer() {\n    const navigation = useNavigation();\n    const route = '';\n\n\t\treturn (\n      <View style={styles.footer}>\n        <Pressable onPress={() => {navigation.navigate('Home'); }}>\n          {route == 'Home' ?\n            <Image style={styles.footer_img} source={require('./assets/img/home_filled.png')}></Image>\n              :\n            <Image style={styles.footer_img} source={require('./assets/img/home.png')}></Image>\n          }\n        </Pressable>\n\n        <Pressable onPress={() => {navigation.navigate('Gare'); }}>\n          {route == 'Gare' ?\n            <Image style={styles.footer_img} source={require('./assets/img/gare_filled.png')}></Image>\n              :\n            <Image style={styles.footer_img} source={require('./assets/img/gare.png')}></Image>\n          }\n        </Pressable>\n\n        <Pressable onPress={() => {navigation.navigate('Trafic'); }}>\n          {route == 'Trafic' ?\n            <Image style={styles.footer_img} source={require('./assets/img/cone_filled.png')}></Image>\n              :\n            <Image style={styles.footer_img} source={require('./assets/img/cone.png')}></Image>\n          }\n        </Pressable>\n        \n      </View>\n    );\n}\n\nexport default App;\nexport {Footer};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#191c2b',\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'left',\n    fontWeight: 'bold',\n    color: '#fff',\n    margin: 23,\n  },\n  footer: {\n    backgroundColor: '#ffffff30',\n    borderRadius: 10,\n    margin: 15,\n    padding: 10,\n    paddingBottom: 15,\n    flexGrow:0,\n    display: 'flex',\n    flexDirection:'row',\n    flexWrap:'wrap',\n    justifyContent: 'space-around'\n  },\n  footer_img: {\n    height: 30,\n    width: 30,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}