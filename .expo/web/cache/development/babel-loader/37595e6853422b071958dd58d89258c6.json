{"ast":null,"code":"import React from 'react';\nimport { useRef } from 'react';\nimport 'react-native-gesture-handler';\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useRoute, useNavigation, NavigationContainer, useNavigationContainerRef } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Trafic from \"./trafic\";\nimport Home from \"./home\";\nimport Gare from \"./gare\";\nimport Gare_1 from \"./gare_1\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\n\nfunction App() {\n  var navigationRef = useNavigationContainerRef();\n  var routeNameRef = useRef();\n  var routeName = '';\n  return _jsx(NavigationContainer, {\n    ref: navigationRef,\n    onReady: function onReady() {\n      routeNameRef.current = navigationRef.getCurrentRoute().name;\n    },\n    onStateChange: function onStateChange() {\n      var previousRouteName = routeNameRef.current;\n      var currentRouteName = navigationRef.getCurrentRoute().name;\n\n      if (previousRouteName !== currentRouteName) {\n        alert(currentRouteName);\n      }\n\n      routeNameRef.current = currentRouteName;\n      routeName = currentRouteName;\n    },\n    style: styles.container,\n    children: _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(StatusBar, {\n        animated: true,\n        backgroundColor: \"#303138\",\n        barStyle: \"light-content\"\n      }), _jsx(Text, {\n        children: navigationRef.getCurrentRoute().name\n      }), _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: '#484a50'\n          },\n          headerTintColor: '#fff'\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Gare\",\n          component: Gare,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Gare_1\",\n          component: Gare_1,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Trafic\",\n          component: Trafic,\n          options: {\n            headerShown: false\n          }\n        })]\n      }), _jsx(Footer, {\n        route: navigationRef.getCurrentRoute().name\n      })]\n    })\n  });\n}\n\nfunction Footer(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.footer,\n    children: [_jsx(Text, {\n      children: route\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        navigation.navigate('Home');\n      },\n      children: route == 'Home' ? _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/home_filled.png\")\n      }) : _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/home.png\")\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        navigation.navigate('Gare');\n      },\n      children: route == 'Gare' ? _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/gare_filled.png\")\n      }) : _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/gare.png\")\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        navigation.navigate('Trafic');\n      },\n      children: route == 'Trafic' ? _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/cone_filled.png\")\n      }) : _jsx(Image, {\n        style: styles.footer_img,\n        source: require(\"./assets/img/cone.png\")\n      })\n    })]\n  });\n}\n\nexport default App;\nexport { Footer };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#191c2b'\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'left',\n    fontWeight: 'bold',\n    color: '#fff',\n    margin: 23\n  },\n  footer: {\n    backgroundColor: '#ffffff30',\n    borderRadius: 10,\n    margin: 15,\n    padding: 10,\n    paddingBottom: 15,\n    flexGrow: 0,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around'\n  },\n  footer_img: {\n    height: 30,\n    width: 30\n  }\n});","map":{"version":3,"sources":["/home/code/app/App.js"],"names":["React","useRef","useRoute","useNavigation","NavigationContainer","useNavigationContainerRef","createStackNavigator","Trafic","Home","Gare","Gare_1","Stack","App","navigationRef","routeNameRef","routeName","current","getCurrentRoute","name","previousRouteName","currentRouteName","alert","styles","container","headerStyle","backgroundColor","headerTintColor","headerShown","Footer","route","navigation","footer","navigate","footer_img","require","StyleSheet","create","flex","title","fontSize","textAlign","fontWeight","color","margin","borderRadius","padding","paddingBottom","flexGrow","display","flexDirection","flexWrap","justifyContent","height","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRef } from 'react';\nimport 'react-native-gesture-handler';\nimport { RefreshControl, Pressable, StatusBar, SafeAreaView, ScrollView, StyleSheet, Text, View, Image  } from 'react-native';\nimport { useRoute, useNavigation, NavigationContainer, useNavigationContainerRef } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Trafic from './trafic';\nimport Home from './home';\nimport Gare from './gare';\nimport Gare_1 from './gare_1';\n\nconst Stack = createStackNavigator();\n  \nfunction App ()  {\n  let navigationRef = useNavigationContainerRef();\n  let routeNameRef = useRef();\n  let routeName = '';\n\n  return (\n    <NavigationContainer \n      ref={navigationRef}\n      onReady={() => {\n        routeNameRef.current = navigationRef.getCurrentRoute().name;\n      }}\n      onStateChange={() => {\n        const previousRouteName = routeNameRef.current;\n        const currentRouteName = navigationRef.getCurrentRoute().name;\n\n        if (previousRouteName !== currentRouteName) {\n          alert(currentRouteName);\n        }\n\n        routeNameRef.current = currentRouteName;\n        routeName = currentRouteName;\n      }}\n      style={styles.container}\n    >\n      <SafeAreaView  style={styles.container}>\n        <StatusBar\n          animated = {true}\n          backgroundColor = '#303138'\n          barStyle = 'light-content'\n        />      \n        <Text>{navigationRef.getCurrentRoute().name}</Text>\n\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: {\n                backgroundColor: '#484a50',\n              },\n              headerTintColor: '#fff',\n            }}\n          >\n            <Stack.Screen\n              name=\"Home\"\n              component={Home}\n              options={{\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen\n              name=\"Gare\"\n              component={Gare}\n              options={{\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen\n              name=\"Gare_1\"\n              component={Gare_1}\n              options={{\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen \n              name=\"Trafic\"\n              component={Trafic}\n              options={{\n                headerShown: false\n              }}\n            />\n          </Stack.Navigator> \n        <Footer \n          route = {navigationRef.getCurrentRoute().name}\n        />\n      </SafeAreaView >\n    </NavigationContainer>\n  );\n}\n\nfunction Footer({route}) {\n    const navigation = useNavigation();\n\n\t\treturn (\n      <View style={styles.footer}>\n        <Text>{route}</Text>\n        <Pressable onPress={() => {navigation.navigate('Home'); }}>\n          {route == 'Home' ?\n            <Image style={styles.footer_img} source={require('./assets/img/home_filled.png')}></Image>\n              :\n            <Image style={styles.footer_img} source={require('./assets/img/home.png')}></Image>\n          }\n        </Pressable>\n\n        <Pressable onPress={() => {navigation.navigate('Gare'); }}>\n          {route == 'Gare' ?\n            <Image style={styles.footer_img} source={require('./assets/img/gare_filled.png')}></Image>\n              :\n            <Image style={styles.footer_img} source={require('./assets/img/gare.png')}></Image>\n          }\n        </Pressable>\n\n        <Pressable onPress={() => {navigation.navigate('Trafic'); }}>\n          {route == 'Trafic' ?\n            <Image style={styles.footer_img} source={require('./assets/img/cone_filled.png')}></Image>\n              :\n            <Image style={styles.footer_img} source={require('./assets/img/cone.png')}></Image>\n          }\n        </Pressable>\n        \n      </View>\n    );\n}\n\nexport default App;\nexport {Footer};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#191c2b',\n  },\n  title: {\n    fontSize: 30,\n    textAlign: 'left',\n    fontWeight: 'bold',\n    color: '#fff',\n    margin: 23,\n  },\n  footer: {\n    backgroundColor: '#ffffff30',\n    borderRadius: 10,\n    margin: 15,\n    padding: 10,\n    paddingBottom: 15,\n    flexGrow:0,\n    display: 'flex',\n    flexDirection:'row',\n    flexWrap:'wrap',\n    justifyContent: 'space-around'\n  },\n  footer_img: {\n    height: 30,\n    width: 30,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}